--- src/kernel/sel4/src/api/syscall.c
+++ src/kernel/sel4/src/api/syscall.c
@@ -325,7 +325,7 @@ handleReply(void)
     }
 
     case cap_null_cap:
-        userError("Attempted reply operation when no reply cap present.");
+//        userError("Attempted reply operation when no reply cap present.");
         return;
 
     default:
--- src/kernel/sel4/libsel4/include/sel4/shared_types.h
+++ src/kernel/sel4/libsel4/include/sel4/shared_types.h
@@ -33,7 +33,7 @@
     seL4_CapFault_GuardMismatch_GuardFound = seL4_CapFault_DepthMismatch_BitsFound,
     seL4_CapFault_GuardMismatch_BitsFound,
     SEL4_FORCE_LONG_ENUM(seL4_CapFault_Msg),
-} seL4_CapFault_Msg;
+}; // seL4_CapFault_Msg;
 
 #define seL4_ReadWrite seL4_CapRights_new(0, 1, 1)
 #define seL4_AllRights seL4_CapRights_new(1, 1, 1)
--- src/kernel/sel4/libsel4/sel4_arch_include/ia32/sel4/sel4_arch/constants.h
+++ src/kernel/sel4/libsel4/sel4_arch_include/ia32/sel4/sel4_arch/constants.h
@@ -83,7 +83,7 @@
     seL4_VMFault_FSR,
     seL4_VMFault_Length,
     SEL4_FORCE_LONG_ENUM(seL4_VMFault_Msg),
-} seL4_VMFault_Msg;
+}; // seL4_VMFault_Msg;
 
 enum {
     seL4_UnknownSyscall_EAX,
@@ -99,7 +99,7 @@
     seL4_UnknownSyscall_Syscall,
     seL4_UnknownSyscall_Length,
     SEL4_FORCE_LONG_ENUM(seL4_UnknownSyscall_Msg),
-} seL4_UnknownSyscall_Msg;
+}; // seL4_UnknownSyscall_Msg;
 
 enum {
     seL4_UserException_FaultIP,
@@ -109,7 +109,7 @@
     seL4_UserException_Code,
     seL4_UserException_Length,
     SEL4_FORCE_LONG_ENUM(seL4_UserException_Msg)
-} seL4_UserException_Msg;
+}; // seL4_UserException_Msg;
 
 #endif /* __ASSEMBLER__ */
 #define seL4_FastMessageRegisters 2
--- src/kernel/sel4/libsel4/sel4_arch_include/x86_64/sel4/sel4_arch/constants.h
+++ src/kernel/sel4/libsel4/sel4_arch_include/x86_64/sel4/sel4_arch/constants.h
@@ -74,7 +74,7 @@
     seL4_VMFault_FSR,
     seL4_VMFault_Length,
     SEL4_FORCE_LONG_ENUM(seL4_VMFault_Msg),
-} seL4_VMFault_Msg;
+}; // seL4_VMFault_Msg;
 
 enum {
     seL4_UnknownSyscall_RAX,
@@ -98,7 +98,7 @@
     seL4_UnknownSyscall_Syscall,
     seL4_UnknownSyscall_Length,
     SEL4_FORCE_LONG_ENUM(seL4_UnknownSyscall_Msg)
-} seL4_UnknownSyscall_Msg;
+}; // seL4_UnknownSyscall_Msg;
 
 enum {
     seL4_UserException_FaultIP,
@@ -108,7 +108,7 @@
     seL4_UserException_Code,
     seL4_UserException_Length,
     SEL4_FORCE_LONG_ENUM(seL4_UserException_Msg)
-} seL4_UserException_Msg;
+}; // seL4_UserException_Msg;
 
 #endif /* __ASSEMBLER__ */
 #define seL4_FastMessageRegisters 4
--- src/kernel/sel4/libsel4/sel4_arch_include/aarch32/sel4/sel4_arch/constants.h
+++ src/kernel/sel4/libsel4/sel4_arch_include/aarch32/sel4/sel4_arch/constants.h
@@ -40,7 +40,7 @@
     /* length of an unknown syscall message */
     seL4_UnknownSyscall_Length,
     SEL4_FORCE_LONG_ENUM(seL4_UnknownSyscall_Msg),
-} seL4_UnknownSyscall_Msg;
+}; // seL4_UnknownSyscall_Msg;
 
 /* format of a user exception message */
 enum {
@@ -52,7 +52,7 @@
     /* length of a user exception */
     seL4_UserException_Length,
     SEL4_FORCE_LONG_ENUM(seL4_UserException_Msg),
-} seL4_UserException_Msg;
+}; // seL4_UserException_Msg;
 
 /* format of a vm fault message */
 enum {
@@ -62,7 +62,7 @@
     seL4_VMFault_FSR,
     seL4_VMFault_Length,
     SEL4_FORCE_LONG_ENUM(seL4_VMFault_Msg),
-} seL4_VMFault_Msg;
+}; // seL4_VMFault_Msg;
 
 #ifdef CONFIG_ARM_HYPERVISOR_SUPPORT
 enum {
