create_boot_directory
import_from_depot [depot_user]/src/[base_src] \
                  [depot_user]/pkg/[drivers_interactive_pkg] \
                  [depot_user]/src/dynamic_rom \
                  [depot_user]/src/report_rom \
                  [depot_user]/src/nitpicker \
                  [depot_user]/src/cpu_burner \
                  [depot_user]/src/cpu_load_display \
                  [depot_user]/src/trace_subject_reporter \
                  [depot_user]/src/init

install_config {
<config prio_levels="2">
	<parent-provides>
		<service name="ROM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
		<service name="TRACE"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<default caps="100"/>

	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>

	<start name="drivers" caps="1000">
		<resource name="RAM" quantum="32M" constrain_phys="yes"/>
		<binary name="init"/>
		<route>
			<service name="ROM" label="config"> <parent label="drivers.config"/> </service>
			<service name="Timer"> <child name="timer"/> </service>
			<any-service> <parent/> </any-service>
		</route>
		<provides>
			<service name="Input"/> <service name="Framebuffer"/>
		</provides>
	</start>

	<start name="nitpicker">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Nitpicker"/></provides>
		<config>
			<domain name="pointer" layer="1" label="no" content="client" origin="pointer" />
			<domain name="default" layer="2" label="no" content="client" hover="always" />

			<policy label_prefix="pointer" domain="pointer"/>
			<default-policy domain="default"/>
		</config>
	</start>

	<start name="pointer">
		<resource name="RAM" quantum="1M"/>
		<route>
			<service name="Nitpicker"> <child name="nitpicker"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

	<start name="report_rom">
		<resource name="RAM" quantum="4M"/>
		<provides>
			<service name="Report"/>
			<service name="ROM"/>
		</provides>
		<config>
			<policy label="cpu_load_display -> trace_subjects"
			        report="trace_subject_reporter -> trace_subjects"/>
		</config>
	</start>

	<start name="trace_subject_reporter" >
		<resource name="RAM" quantum="6M"/>
		<config period_ms="500">
			<report activity="yes" affinity="yes"/>
		</config>
		<route>
			<service name="Report"> <child name="report_rom"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

	<start name="cpu_load_display">
		<resource name="RAM" quantum="6M"/>
		<route>
			<service name="ROM" label="trace_subjects"> <child name="report_rom"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

	<start name="dynamic_rom">
		<resource name="RAM" quantum="4M"/>
		<provides><service name="ROM"/></provides>
		<config verbose="yes">
			<rom name="cpu_burner1.config">
				<inline description="initial state">
					<config percent="5"/>
				</inline>
				<sleep milliseconds="5000" />
				<inline description="50%">
					<config percent="50" />
				</inline>
				<sleep milliseconds="5000" />
			</rom>
			<rom name="cpu_burner2.config">
				<inline description="initial state">
					<config percent="5"/>
				</inline>
				<sleep milliseconds="4800" />
				<inline description="100%">
					<config percent="70" />
				</inline>
				<sleep milliseconds="2700" />
			</rom>
		</config>
	</start>

	<start name="cpu_burner.1">
		<binary name="cpu_burner"/>
		<resource name="RAM" quantum="1M"/>
		<route>
			<service name="ROM" label="config">
				<child name="dynamic_rom" label="cpu_burner1.config"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

	<start name="cpu_burner.2">
		<binary name="cpu_burner"/>
		<resource name="RAM" quantum="1M"/>
		<route>
			<service name="ROM" label="config">
				<child name="dynamic_rom" label="cpu_burner2.config"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>
</config>}

build_boot_image {}
append qemu_args " -smp 4,cores=4 "
run_genode_until forever
